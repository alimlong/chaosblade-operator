name: Build Operator Images

on:
  workflow_dispatch: {}
  push:
    tags:
      - v*

permissions: read-all

jobs:
  Upload:
    permissions:
      # https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#authenticating-to-package-registries-on-github
      packages: write
    strategy:
      matrix:
        # arch: [ amd64, arm64 ]
        image:
          [ chaosblade-operator ]
    outputs:
      image_tag: ${{ steps.image_tag.outputs.image_tag }}
    runs-on: ubuntu-20.04
    steps:
      - name: Extract Image Tag
        id: image_tag
        shell: bash
        run: |
          IMAGE_TAG=${GITHUB_REF##*/}
          echo "::set-output name=image_tag::$(echo $IMAGE_TAG)"

      - name: echo arch
        run: echo arch = $(arch)

      - uses: actions/checkout@v2
        # with:
        #   ref: 'v1.7.3'

      - name: Set Up Go 1.17
        uses: actions/setup-go@v3
        with:
          go-version: 1.17
        id: go

      - name: Login to GitHub Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Image
        run: |
          make docker-build-arm64
        #  make docker-build

      #- name: Log in to the Container registry
      #  uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      #  with:
      #    registry: ${{ env.REGISTRY }}
      #    username: ${{ github.actor }}
      #    password: ${{ secrets.GITHUB_TOKEN }}


      - name: Save Image to file
        run: |
          docker images ls
          docker save -o chaosblade-operator-arm64.tar ghcr.io/alimlong/chaosblade-operator-arm64:1.7.3
          # ls build/_output/image/

     #  - name: Create Release
     #    id: create_release
     #    uses: actions/create-release@v1
     #    env:
     #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     #    with:
     #      tag_name: v1.7.3
     #      release_name: Release ${{ github.ref }}
     #      body: |
     #        Changes in this release:
     #        - Bug fixes
     #       - New features

      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: build/_output/image/chaosblade-operator-arm64.tar.gz
      #     asset_name: chaosblade-operator-arm64.tar
      #     asset_content_type: application/zip

      
          


      # - name: Upload Image
      #   run: |
      #     make push_image
